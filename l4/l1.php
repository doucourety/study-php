<?php
/**
 * Created by PhpStorm.
 * User: gagau
 * Date: 30.01.2019
 * Time: 15:00
 */
/**
 * Первый способ создания массива и сохранения в нём данных
 */
$people =   [
                'Дмитрий',
                'Булгар',
                "Ленина 89",
                30,
                "Максим",
                26,
                "Карп",
                "Котовского 5",

            ];

//echo 'Привет '.$people[4];

/**
 * Функция count() считает количество елементов в массиве, который мы укажем в качестве аргумента функции count($people)
 */
count($people);

/**
 * Второй способ создания массива и сохранения в нём данных
 */

$array2 = array(
    'Дмитрий',
    'Булгар',
    "Ленина 89",
    30,
    "Максим",
    "Карп",
    "Котовского 5",
    26);

//count(массив) -1 //всегда даст последний элемент массива.
echo $array2[3] + $array2[ count($array2) -1 ]. '<br>';

/**
 * Индексы массива, могут быть строками
 * Таким макаром, мы можем добавлять в массив дополнительные елменты, не создавая его заного.
 * Если мы не указываем индекс в ручную(При добавлении дополнительных елементов массива), индекс каждого добавленного элемента массива будет равен максимальному значения индекса массива +1
 */
$people[100] = 'Зоя';
$people[] = 'Космодеянская';
$people[] = 'СССР';
$people[] = 19;

echo $people[101].'<br>';

//Привет, меня зовут Зоя Космодеянская, я живу в СССР и мне 19 лет.
echo 'Привет, меня зовут '. $people[100]." ".$people[101]. ', я живу в '.$people[102].' и мне ' . $people[103] . ' лет.<br>';

/**
 * Индексы массива, могут быть строками
 */

/**
 * Когда мы указываем индексы для елементов массива вручную, синтаксис таков: индекс => значение
 * Если это строки 'индекс'=>'значение'
 * значение строкового индекса не обязательно должно быть строкой, по этой причине такое объявление так же верно:
 * число => 'значение'
 * и это тоже верное 'индекс'=> число
 * КАЖДЫЙ ЕЛЕМЕНТ МАССИВА, ОТДЕЛЯЕТСЯ ОТ СЛЕДУЮШЕГО ЗА НИМ СИМВОЛОМ ЗАПЯТОЙ
 */
$address = [
    'country'=>'Молдова',
    'city'=>'Вулканешты',
    'street'=>'Ленина 89',
    'flat'=> 3,
];
$address['state'] = 'Кагульский';


//Я проживаю по адресу: Республика Молдова,Кагульский район, г.Вулканешты, улица Ленина 89, квартира 3

echo 'Я проживаю по адресу: Республика '.$address['country']. ', '.$address['state']. ' район, г.'.$address['city'].' улица '.$address['street']. ', квартира '.$address['flat'].'<br>' ;

/**
 * Массивы могут хранить в себе не только, строки, цифры и другие типы данных, но так же и другие массивы.
 */


$info = [
    1=>[
        'name'      => 'Дмитрий',
        'lastName'  => 'Булгар',
        'age'       => 30,
    ],
    2=>[
        'name'      => 'Максим',
        'lastName'  => 'Карп',
        'age'       => 26,
    ]
];
/**
 * Получение доступа к елементу вложенного массива
*/
echo $info[1]['name'].'<br>';

//массив товары: напитки, фрукты

$products = [
    [
        'tea'     => 'Чай',
        'coffee'  => 'Кофе',
        'water'   => 'Вода',
    ],
    [
        'apple'   => 'Яблоко',
        'cherry'  => 'Вишня',
        'blackberry' => 'ежевика'

    ],

];

    //Я люблю кофе
echo 'Я люблю '. $products [1]['apple'] .'<br>';


$products[] = ['soap'=>'мыло'];

// Я использую мыло

echo 'Я использую '. $products [2]['soap'].'<br>' ;

echo $products [2]['soap'].'<br>';
$products[2]['powder'] = 'Порошок';
/**
 * print_r(имя массива) выводит на экран все елементы массива сразу (функция только для разработки)
 * другой вариант дебаг функции это var_dump(имя переменной)
 */

$products [2]['soap'] = 'Хозяйственное мыло';
echo $products [2]['soap'].'<br>';

$products[2]['powder'] = 'Стиральный порошок';
//echo '<pre>';
//print_r ($products);


echo str_repeat('Габен хуисос ',10);